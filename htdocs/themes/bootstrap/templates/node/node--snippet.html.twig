{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['node']->getCreatedTime().
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}

{% if view_mode == 'full' %}

  {{ attach_library('bio_theme/prism') }}

  <article{{ attributes.addClass(classes) }}>

    <div class="container snippet-inner">

    <div class="snippet-top">
      <div class="snippet-top-inner">

        <div class="twelve columns">

          <div class="snippet-box">
            <div class="section-heading">
              <h2>Specs</h2>
            </div>
            <div class="snippet-spec version">
              {{ content.field_version }}
            </div>
            <div class="snippet-spec tools">
              {{ content.field_tools }}
            </div>
            <div class="snippet-spec created field">
              <div class="field-label">Created</div>
              {{ created }}
            </div>

            <div class="snippet-parts field">
              <div class="field-label">Sections</div>
              <ol>
              {% for code_part in code_parts %}
              <li><a href="#code-wrapper-{{ code_part.key }}-summary" class="scroll-link">{{ code_part.section_name }}</a></li>
              {% endfor %}
              </ol>
            </div>

          </div>

        </div>

        <div class="twelve columns">

          <div class="snippet-box">
            <div class="section-heading">
              <h2>Summary</h2>
            </div>
            <div class="snippet-description">
            {{ content.body }}
            </div>

            <div class="snippet-refs field">
              <div class="field-label">References</div>
              <ol>
              {% for ref in refs %}
              <li>
                <a href="{{ ref.uri }}" target="_blank">{{ ref.title }}</a>
                <div class="ref-uri">{{ ref.uri }}</div>
              </li>
              {% endfor %}
              </ol>
            </div>

          </div>

        </div>
        <div class="clearfix"></div>
      </div>
    </div>
    <div class="snippet-divider divider section-heading">
      <h2>Source</h2>
    </div>
    <div class="snippet-code">
      <div class="snippet-code-inner">

      {% for code_part in code_parts %}
      <div class="code-part">
        <a href="#code-wrapper-{{ code_part.key }}-code" class="scroll-link">
          <div id="code-wrapper-{{ code_part.key }}-summary" class="code-summary">
            <div class="section-name"><h2>{{ code_part.key + 1 }}. {{ code_part.section_name }}</h2></div>
            <div class="file-name"><label>File name:</label> {{ code_part.file_name }}</div>

            {% if code_part.file_path %}
            <div class="file-path"><label>File path:</label> MODULE_PATH/{{ code_part.file_path }}</div>
            {% endif %}

            {% if code_part.description %}
            <div class="description">{{ code_part.description }}</div>
            {% endif %}

          </div>
        </a>
        <div id="code-wrapper-{{ code_part.key }}-code" class="code-wrapper">
<pre class="line-numbers">
<code class="language-{{ code_part.language }}">
{{ code_part.value }}
</code>
</pre>
        </div>
      </div>
      {% endfor %}

      </div>
    </div>
    <div class="snippet-divider divider section-heading snippet-comment-divider">
      <h2>Comments</h2>
    </div>
    <div class="snippet-comments">
      <div class="snippet-comments-inner">
        Placeholder: I'll extend node comments with ajax and other functionality here.
      </div>
    </div>

    </div>

  </article>

{% endif %}

{% if view_mode == 'teaser' %}

  <a href="{{ url }}">
  <article{{ attributes.addClass(classes) }}>
    <div class="node-link">
     <h3>{{ label }}</h3>
    </div>
    <div class="snippet-description">
      {{ content.body }}
    </div>
    <div class="tools">
      {{ content.field_tools }}
    </div>
    <div class="snippet-drupal-version">
      {{ content.field_version }}
    </div>
    <div class="snippet-created">
      Created {{ created }}
    </div>
  </article>
  </a>

{% endif %}


